name: Manually triggered workflow
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '1.0.0'

env:
  RELEASE_VERSION: ${{ github.event.inputs.version }}
  RC_BRANCH_NAME: rc-${{ github.event.inputs.version }}

jobs:
  create_rc_branch:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Set up Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.6'

    - name: Cache Bundle
      uses: actions/cache@v2
      id: cache-bundle
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - name: Bundle Install
      run: |
        gem install bundler
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Create RC branch and bump up version
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git switch -c ${{ env.RC_BRANCH_NAME }}

        bundle exec fastlane bump_up_version version:${{ env.RELEASE_VERSION }}

        if git diff-index --quiet HEAD; then
          echo "CFBundleShortVersionString is correct."
        else
          echo "CFBundleShortVersionString should be updated."
          git add *.plist
          git commit -m "bump up version"
        fi

        git push origin HEAD

#    - name: Create Branch Protection rules
#      run: |
#        curl -X PUT https://api.github.com/repos/imairi/GitHubActionsTest/branches/${{ env.RC_BARNCH_NAME }}/protection \
#        -H "Authorization: token ${{ secrets.BRANCH_PROTECTION_SECRETS }}" \
#        -H "Accept: application/vnd.github.luke-cage-preview+json" \
#        -d @- << EOF
#        {
#          "enforce_admins": true,
#          "required_status_checks": {
#            "strict": false,
#            "contexts": [
#              "lint"
#            ]
#          },
#          "required_pull_request_reviews": {
#            "dismiss_stale_reviews": true,
#            "require_code_owner_reviews": false,
#            "required_approving_review_count": 1
#          },
#          "restrictions": null
#        }
#        EOF

#    - name: Slack Notification
#      uses: tokorom/action-slack-incoming-webhook@master
#      env:
#        INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
#      with:
#        text: \@imairi succeeded.
